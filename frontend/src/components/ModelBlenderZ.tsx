/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.4 public/modelBlenderZ.glb --types
*/

import * as THREE from "three";
import React, { useRef } from "react";
import { useGLTF, useAnimations } from "@react-three/drei";
import { GLTF } from "three-stdlib";

type GLTFResult = GLTF & {
  nodes: {
    Ch36: THREE.SkinnedMesh;
    mixamorig1Hips: THREE.Bone;
  };
  materials: {
    Ch36_Body: THREE.MeshStandardMaterial;
  };
};

type ActionName = "Armature|mixamo.com|Layer0";

export function Model(props: JSX.IntrinsicElements["group"]) {
  const group = useRef<THREE.Group>(null);
  const { nodes, materials, animations } = useGLTF(
    "/modelBlenderZ.glb"
  ) as GLTFResult;

  console.log(nodes);
  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Scene">
        <group name="Armature" scale={0.01}>
          <primitive object={nodes.mixamorig1Hips} />
          <skinnedMesh
            name="Ch36"
            geometry={nodes.Ch36.geometry}
            material={materials.Ch36_Body}
            skeleton={nodes.Ch36.skeleton}
          />
        </group>
      </group>
    </group>
  );
}

useGLTF.preload("/modelBlenderZ.glb");
